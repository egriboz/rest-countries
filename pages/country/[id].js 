import { useEffect, useState } from "react";
import Head from "next/head";
import Layout from "../../components/layout";

// pages/posts/[id].js

function Post({ post }) {
  return (
    <Layout>
      <Head>
        <title>Ana sayfa</title>
      </Head>

      <h1>{post.name}</h1>
    </Layout>
  );
}

// This function gets called at build time
export async function getStaticPaths() {
  // Call an external API endpoint to get posts
  const res = await fetch("https://restcountries.eu/rest/v2/alpha/TUR");
  const posts = await res.json();

  // Get the paths we want to pre-render based on posts
  const paths = posts.map((post) => ({
    params: { id: post.id },
  }));

  // We'll pre-render only these paths at build time.
  // { fallback: false } means other routes should 404.
  return { paths, fallback: false };
}

// This also gets called at build time
export async function getStaticProps({ params }) {
  // params contains the post `id`.
  // If the route is like /posts/1, then params.id is 1
  const res = await fetch("https://restcountries.eu/rest/v2/alpha/TUR");
  const post = await res.json();

  // Pass post data to the page via props
  return { props: { post } };
}

export default Post;

// const getCountry = async (id) => {
//   const res = await fetch(`https://restcountries.eu/rest/v2/alpha/${id}`);

//   const country = await res.json();

//   return country;
// };

// const Country = ({ country }) => {
//   const [borders, setBorders] = useState([]);

//   const getBorders = async () => {
//     const borders = await Promise.all(
//       country.borders.map((border) => getCountry(border))
//     );

//     setBorders(borders);
//   };

//   useEffect(() => {
//     getBorders();
//   }, []);

//   console.log(borders);

//   return <Layout>{country.name}</Layout>;
// };

// export default Country;

// export const getStaticPaths = async () => {
//   const res = await fetch("https://restcountries.eu/rest/v2/all");
//   const countries = await res.json();

//   const paths = countries.map((country) => ({
//     params: { id: country.alpha3Code },
//   }));

//   return {
//     paths,
//     fallback: false,
//   };
// };

// export const getStaticProps = async ({ params }) => {
//   const country = await getCountry(params.id);

//   return {
//     props: {
//       country,
//     },
//   };
// };
